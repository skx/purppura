//
// This file was generated via github.com/skx/implant/
//
// Local edits will be lost.
//
package main

import (
	"bytes"
	"compress/gzip"
	"encoding/hex"
	"errors"
	"io/ioutil"
)

//
// EmbeddedResource is the structure which is used to record details of
// each embedded resource in your binary.
//
// The resource contains the (original) filename, relative to the input
// directory `implant` was generated with, along with the original size
// and the compressed/encoded data.
//
type EmbeddedResource struct {
	Filename string
	Contents string
	Length   int
}

//
// RESOURCES is a simple array containing one entry for each embedded
// resource.
//
// It is exposed to callers via the `getResources()` function.
//
var RESOURCES []EmbeddedResource

//
// Populate our resources
//
func init() {

	var tmp EmbeddedResource

	tmp.Filename = "data/index.html"
	tmp.Contents = "1f8b08000000000004ffcc586d73db3612feee5fb1813327691292f24b9b382135e3b353db8993f82de9a59dce0d4840226410a0019092dac97fbf014152a4ece6dc5ee7a6d40712c062f1ecb38b5d40e193e38f47375f2ede406a323ed90aed0b3816b3085181265b00614a31b11f00a16186d3c921a7ca68f8791c8c83f12f61e07ab7c04a64d4604852ac3435112accd47b59690170430267344225a38b5c2a832091c2506122b460c4a411a1254ba8b7b08de7c004330c734f2798d368a7a7283526f7e85dc1ca081d3925decd2aa71d95862e4d600d7add22fa74f3c31ad013cf83736ca83690c82c679c12c08240c6049b324ae0e8fa1a3cafb68c33710b8af20869b3e254a7941a04a9a2d3085930fa551064789910e1c7521a6d14ce6d239159d076047bfe9eff2248b45ef7f919137ea23502260c9d29665611d229de7bb9effdf3f317c6aecf7ea0ef76c849f6f6eaf0769514a787a757b3bddd8fd9a764b17821c5ded51732dbff8c9f5d64d737fad7e0ddf72fcb98bc99a7fb05824449ada562332622848514ab4c161a4d9cbb2c05f3cb82aa15300dcaf2a9288178052d646819d08962b901ad92b5c58924d49fdf590d95a5eed3dbf17776fdfdcab2f9838689f2108f9f7d7f393b48f8e2cbd1c9c9457e7c79fe393fff20c6d32b7cf5717e7aa777f6ccfec96cbef7e6d7efc6ff1227977749a05ebe4fc5d5f14f081225b5968a6d1a16060e67ed366be1379dfc1697f8da59f64d4b1febdbf9a66b1f26e026f9eeec92c5e3dd1777e56a7efd7e7a3afff81e9fdf4e8b1f3f2f7f5a7eba10476f0f5ff0ddece8c70f67f9c941767274fc7271f2e12cb9387e71b3c4e8b1043836c0ac721ab92d31c72576bdc83933c80b95e785c216eb268155b477a7db5075e4429535e0b72a9600629cdcce942c04f112c9a57ab53d3db0bfd7f5f8d7faed6b434bea4da53454b5b3734c0813b357b03fce97306e26394db07d70d0eab9b70e6c2c144b45a8f28ccc5fc16ebe042d3923b04d0fecaf51fc301a5fe0d2b319af83ac8610739cdc36b3a752186f41d92c35af20969c34034e6d1854b4399abeed022703b06082c8852f0597984004d342248649311c35fcb2290cb94cb0edf553ac5378124530188ce0e970807f76a96800cfa02ff40c06e897c1c837381e0e742a17835103b69a47b0c19e91b319b70182e34a3866820c070967c9ede0f91a0b1db5feea2f12c1d321f50d56336a463e36460d0716d060e4eb22d6460d77da55bf8e5e6fd5a1100450adc1c40ca40093525072010bc6393848551fa10633aefd7ad6d3212083634e118c7c42399d61436d9ff22b6de839006abe5a1e81965418585b609f122b70a82b139c4c6d07b488ed63d98727b5b0cff410104630dad007f0746852a6477ec2a5a6da0c07460d46bea0cbe6d3d935ec297751031bd47cca09361464a100bb9a4b4b9baaf7c6a06922056919292ac97f3ba9b56a4dcd99305495980f5b1e46bfdd1387afcf616f3c1e8f5b500e50379786415a1f04c25892950bdb50e012128eb58e90c0658c15b89747e81417dcb4e11d12d64adaa28f99a0ca9bf2829156067a52b522bb2a551d1980302e8cb1e152e534d7407d187540dbbdcb71ae2941d08bf344bafea6bb0adc086dbb451160c5b0479739168492084d31d7b4eeb5e895e4adc53d6800a1ceb168c068e549c157687253ed2f4b0e9b551b380cac9c63b1797a5359228517635525e41cff1f44c3c051d90515e2c614c78c172b2c4873ee09d0e4a22e1d6180d7f3c280b0b2d3b4be67a409914d5735be689dd563342c7807826530c6ca13b8ec4901849c4d420c36e94416d8a9cca80515069cada1008441c17beddfd3df2ca56c92bfbf187456e372260b8326e7d5fbbfafdae3a7d30803815bde2ad6eabd6563aeda311d1c61ba5b1fc5c320dd5d9b74df20cfe0d89ec24884b2d50d8e3b4a2ade9a55706258499135acb7596c51a889dd5698d9dd34b9aade0f9aea1cf1bb1a70722be4825332a3044d0e3bad3fa32da7c21e1bd0e4c27ddcd7e11c5e978e7e8a3138aeb633157d0757d45bba6a6b1b82ac7c8e0585292614988086b156bb7dc27cf20f11ebfc7518e41b23c656ad8ee63a637717e0142a294f1bc5724aea562a4b6a4b55cca9e7ce37ed90ad045458af407f397b635393d0a493ed303069f5752d0b95d075b388e734316dfb1c6b031fa47117a0c3f5c0617518d14e3030aabf52185498bb9d9db0764f4b6a2f001ea4b617a0f03842bb5aff76b4fe85ec3501ff9711572bfcdb71566518b861368dd7c1fbbfd2d88bc9ba516fdddea6fd338d4a4f585f6a6cee709fad9f5c13ba771f044ada43b7c0cda9a00dfc6ab37c2bf9db92da8e732f23def7ed64fbf4ab406fa897f3d7f71d54e7063892846e56cd6a8e2d0caebe367f78cc98498bb8baf9ebdb657b8f4493c312336e93953dd63ba9fb9979b318d71eb1f0edf3076d84c7197924f35555d21f6962e530ff9666b93f65019a5cdbcb2bbca359fe070dea5817062e1a6cd084412cc96ab21506a9c9f864eb3f010000ffff73c5167293130000"
	tmp.Length = 5011
	RESOURCES = append(RESOURCES, tmp)

	tmp.Filename = "data/login.html"
	tmp.Contents = "1f8b08000000000004ffc4576d53dc3812feceafe855b66ea1f63ce62d0b0cf6547190852424bc0cc91efb4db6648f065932926c66b2b5fffd4a926dec6136c7dd873b4dd558925bada79f6eb5dad10f6757a777f7d7ef60660a3ed988ec033816798ca840930d80684631b11d80c830c3e9e452e64cc02d7dac98a2240afdec065889821a0c0217344635a34fa55406412a85a1c2c4e88911338b09ad594a0337f83b30c10cc33cd029e634de717b0278453363cac0ee53c7e8d42b09ee9625eda9347461428bfa18d219569a9af8cbddafc161abe78720804b6ca83690caa2649c12c08240c104cb1825703a9d421034f039130fa0288f91364b4ef58c528360a66816230b468fc3b0c08b94885122a5d146e1d20e525984dd44b837da1b1d84a9d6cf73a3828951aa3502260ccd1533cb18e919de3bdc0ffef1f59eb1e9fb5fe9c71d725e7cb83d7958a6d5c5c9c56dbeb77b557c499f9e0ea4d8bbbd27f9fe57fcf37531bdd3dfc28fbf1cd60979379fed57085225b5968ae54cc4080b299685ac349a789f580ae63715554b601a94e5535102c9123ac8d031a053c54a035aa5cf16a792d0d1fcd16a7096fa6eb033dad91ded3bcbe66b0d13f509defef9979bfc28e54ff7a7e7e7d7e5d9cde5d7f2f2b3d8ce6ef1edd5fce251efec99fdf37cbef7eedbdbed7f8af39bc73454879f66e2f6ec7704a9925a4bc5560d8b428fb3719bb5f0bb4efe806b3cf5967dd7d2d7fa76beeadaf504dca56fdfdfb0647bf7e0b15ecea79fb28bf9d5277cf99055bf7d5dfcbef8722d4e3f9c1cf0dde2f4b7cfefcbf3a3e2fcf4ecf0e9fcf3fbf4faece06e81d12b08f03e76e10a6659d2d81f091b6b9e1d70671bfe708200094e1f72252b41825472a9c66fb223fb3b6edeffd93c47dad09a06999486aa6e75890961221fc3fe76b980ed7691d7046f8e8e3a3d2ff681958d12a908558191e51876cb0568c9198137f4c8fe5ac5ebd18c04ae039b977ac81a0809c7e943bb3a93c2044f94e53333864472d2bef06aa3d0d1e6696a23bfc7e11cd7d8c75943e58f9b40645a155418d81a298ac97233ab446a98149b5bf007fcb8f913136565c6862eccb8669a259c8e33a6b4f9696b94c9b4d29b5bc7f0e79623b91fc55168edb150a24492a5edd816095c43cab1d63112b84eb002ff0808cd70c55b64b6458475b236e56226a80a325e31d2e0f7ad2fd728b37b533590028892ca18291a46fc000dc10446e639a7967c8e4b4d0902820d6ea663944a3fdf4e63955313a3377e5b0458311cd0458905a1244619e69a36b3d602257967f70a3880489758b470b40aa4e04b34b9f38004ae598ead5fa2d0cab57cb66db098a55204095668f2bf158e424fea105c845ba33c4b41a2b020ed2d14a2c975a5cab252380a717f651412560f266c3c30d206ceaaeb5adf74ce5b6138aa780f886534c12a10b85e910388389b4418fc3519a2c9852ca80517859cf501014461c5fb332b9807c32814b89ef8fc0683a0b5a1e182bb87a43396dbea24910b04ee70c7a8c02a67c2e599b7dbe5e2b8e3a1c0cc0a5afb838204bfb41d99659a9a60cf8d75111cb69de6c56e6fdb21b0120bcac1fd074c641241dfd835b2eee031910f34dae6cc69cebdd7e7aa2ce48baf014fbead9bb2fe6f4868f2b663616fbb5c742478e536e5ac826de0360a08d325c7cbb190822217558ee80073ea4a3c9fa2dc08dc7f40b0c8a96ab9dbd9b5a76b25426d8b32a98a678576d481b383602615fb2685c11c81929cc66e1a0176693746a10382a0a06626498caeafa6772ff81c1ad38444228d91c51876dff60861367f07f6862cd76859493b3de1001322059a44acf55bce97e5cce616e87a41a56d9a8d42f617a9c6b6c8697594d84a1a3509d8d085ada53dd18e197b0e94e4a829b8bd708d79456384a0e438a533c9095531ba979502bbb915823586ad891fdbfa31f4ff638dcbf4c186cf2b592bb1d64f529196b9e7f177d87b167a495cf76e789c6d7b3d6fb6d0d9e91f3de743176850569c07cad6296bb66862b7c19e4a6e93d2ceaefbacb237e4da25d08691af67749514ccf883dbf66d28c4dda8891bf771d71dc0c408488cf0c9eca5f136a1af39d27f311d85d6e2a19617f4ad4c0c86cdc0d54e005139f99b4874791c85e5e4bf19383d5153e0da7bd2773be3fd10fa75709b819ecb8b8e1577523a1f89f51754f7dedf38dd62db86f7ede095bb62dbc5cfb52f9a4c65a5520aa792d035976dff5a6ebf5e73666655e23ee3f4c3222c9b5a024d4e6acc384e380529c04badbbc3873778e3110bdfb62107ffd6c6d53c14f1b5469eca72e9cec62b4d740e1b3dd0a21c652c4493a9fd90818fb428ff43837ad6d9d8b51f423668a230916439d988c29929f864e35f010000ffffe8bf39f645110000"
	tmp.Length = 4421
	RESOURCES = append(RESOURCES, tmp)

	tmp.Filename = "data/purppura.js"
	tmp.Contents = "1f8b08000000000004ffec574d6fe33610bde7573cb0012cd58995057ada5801d206055aa05ba0e9cd0e0a46a42d360a2990a3b8c6c6ffbd18ca1f92bd31924551ec2173b2490de7cdcc7b1c69d6d8828cb3686a2549ff252bed2924e9c9e71300381dcd35fd7afbfba70422d34fda521038c3c62b81922491a27d9aed497a94c8f17975194f602b27032f4dd06a70871c17ddf55a5b65ecfc7043160fd62d2aade65bb7ad5f96e1a74a4b0fd77890bcaf34dc0cb50c841623ce71bf84d78feec9d8396455c1bb45809b75cfa052b7de67d0ff14ba26cc9c8fab33e303215994a62861425c2bb554da9f7bb74847db53d821e1941ff412c6a2ec9682ed3411df090ce3fe10625d5f918e66c6aa4490ff38a7e42215e928a2d549ba2bdb6a97f1e948cba26ccbdd2dff835e9ee14956b1055b546c59861f9bc73a422f5c63894b442527b3ac63bdda569fc51c62290c557a971a1b6716485213907398c9e036fe1bdced50b29593f6296eeff6f7f0c301a23f39be09289df746e11c0b8d85b4047208a55b401b2ab5875898aa42e40c2489b3fdcc44c5bdb68ecccc68151f81f3bc5072bf955ed30aceb6a92debbdcccc0cc936b51c22c652e2b08e6c5c06851cbf492a47de3556256d353ead115cd3e00edfe3c3c5c545dac3cac69eb5f441ff5c394989ea747863fc88d50bdc48d20914905ef66bc79665300acf08aef185e61fcdfddfba203ca35f8e67c8a8e903249c07218718934751c910f2a9282a533c4cc5d598d41533f5495693c12f37833be6eb38e3d57eb3d908c3784cc7e536c27abd1b866da8db368bd73b0eb94043bc02db58a2f47a964f45d6b94e32ce32d9a699f2595371258b877126afc441d5da5cd139ace0cbe78563e2deb183da927eb1bdd74a45ba46651ee0d85c2511f946870c7eef5219d0bd53cb413a9235cb20a1f46830a5499a2af485cff6d6780780d9362022e5022d2b9d4f8532a1aee4f2a375565faea917cb322685c255a196369f8a1f78abde91f22622dd10a55ebb64e4af443ff8aa07655fea1d2abc24f823526ba5157a11d8be296d7d9db43a0c8fd7e10b0c8f7bccf0374b22f6f89dfaff35f57b5c3cce7dbe108c9dbf75cefdc16f6fef436ef2e621f77542e401a57840ae87c5b1f9db116d1c3d2f8836eeb168df35f83f8c9fbe24b30cb79ae264ffc23bb67245f3a82d8de21ebf9d5dc76f304c9806dd4fa72144ec6e39d9ff3aeaecac15de4ec93bd1798f5ca5972700b04a2f4f5627ff060000ffffaeaf5d49f90d0000"
	tmp.Length = 3577
	RESOURCES = append(RESOURCES, tmp)

}

//
// Return the contents of a resource.
//
func getResource(path string) ([]byte, error) {
	for _, entry := range RESOURCES {
		//
		// We found the file contents.
		//
		if entry.Filename == path {
			var raw bytes.Buffer

			// Decode the data.
			in, err := hex.DecodeString(entry.Contents)
			if err != nil {
				return nil, err
			}

			// Gunzip the data to the client
			gr, err := gzip.NewReader(bytes.NewBuffer(in))
			defer gr.Close()
			data, err := ioutil.ReadAll(gr)
			if err != nil {
				return nil, err
			}
			_, err = raw.Write(data)
			if err != nil {
				return nil, err
			}

			// Return it.
			return raw.Bytes(), nil
		}
	}
	return nil, errors.New("Failed to find resource")
}

//
// Return the available resources.
//
func getResources() []EmbeddedResource {
	return RESOURCES
}
